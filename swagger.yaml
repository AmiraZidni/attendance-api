openapi: 3.0.0

info:
  title: Attendance System with Geo Location
  description: Glints Industry Project Exploration Group 1
  version: 1.0.0

servers:
  - url: https://glints-ipe1-attendance.herokuapp.com/v1/
    description: Backend main server

tags:
  - name: Account
    description: Operations related to user accounts
  - name: Attendance
    description: Operations related to attendance records
  - name : Admin
    description: Operation related to admin authority
paths:
  /accounts/register:
    post:
      tags:
        - Account
      summary: Register a new user to the server
      description: ''
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
                - first_name
                - last_name
                - email
                - password
      responses:
        '201':
          description: User registered to the application successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Account register success.
        '400':
          description: Bad Request. One of form data did NOT meet the requirements.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Request body did not pass the validation process.
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        value:
                          type: string
                        msg:
                          type: string
                        param:
                          type: string
                        location:
                          type: string
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /accounts/forget-password:
    post:
      tags:
        - Account
      summary: Request server to send link to reset password to user's email.
      description: ''
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        '200':
          description: Operation success. Email sent to the user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Operation success. Email sent to the user.
        '404':
          description: Email not found in the database.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email not found.
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /accounts/reset-password/{resetToken}:
      post:
        tags:
          - Account
        summary: Change user's password
        description: ''
        parameters:
          - in: path
            name: resetToken # Note the name is the same as in the path
            required: true
            schema:
              type: string
            description: request token from the email
        requestBody:
          required: true
          content:
            application/x-www-form-urlencoded:
              schema:
                type: object
                properties:
                  password:
                    type: string
                required:
                  - password
        responses:
          '200':
            description: Password changed successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Password updated successfully.
          '400':
            description: Password rejected. Must be at least 8 characters long.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Password must be more than 8 character length.
          '403':
            description: Reset token is incorrect
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Reset token is incorrect.
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string

  /accounts/auth:
    post:
      tags:
      - Account
      summary: Get user data and tokens by providing user's credentials in the request body
      description: ''
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
                - email
                - password
      responses:
        '200':
          description: OK. User authentication success.
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                        first_name:
                          type: string
                        last_name:
                          type: string
                        isAdmin:
                          type: boolean
                        access_token:
                          type: string
                        refresh_token:
                          type: string
        '400':
          description: Bad Request. Request body did not pass validation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        value:
                          type: string
                        msg:
                          type: string
                        param:
                          type: string
                        location:
                          type: string
        '401':
          description: Unauthorized. Email or password is incorrect
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '403':
          description: Forbidden. Account has not been approved by admin
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
  /attendances:
    get:
      tags:
      - Attendance
      summary: Get all attendances of all user in monthly period. ADMIN ONLY
      description: ''
      parameters:
        - in: query
          name: year
          schema:
            type: integer
          description: Year for filtering attendances. If omitted, system will use current year.
        - in: query
          name: month
          schema:
            type: integer
          description: Month for filtering attendances. Use number from 1 to 12. If omitted, system will use current month
      responses:
        '400':
          description: Bad Request. Request query parameters did not pass validation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        value:
                          type: string
                        msg:
                          type: string
                        param:
                          type: string
                        location:
                          type: string
        '403':
          description: Forbidden. Current user don't have admin privilege
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '200':
          description: OK. Attendances of all users retrieved successfully
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                    results:
                      type: array
                      items:
                        type: object
                        properties:
                          first_name:
                            type: string
                          last_name:
                            type: string
                          email:
                            type: string
                          in_time:
                            type: string
                            format: date-time
                          in_location:
                            type: object
                            properties:
                              lat:
                                type: number
                              long:
                                type: number
                          out_time:
                            type: string
                            format: date-time
                          out_location:
                            type: object
                            properties:
                              lat:
                                type: number
                              long:
                                type: number
  /admin/accounts:
    get:
      tags:
      - Admin
      summary: Retrieve all registered account
      description: ''
      security:
        - access_token: []
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
      responses:
        '200':
          description: Success retrieve account list.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                      type: string
                      example: Success retrieve account list.
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        first_name:
                          type: string
                        last_name:
                          type: string
                        email:
                          type: string
                          format: email
                        status:
                          type: string
                          enum: [pending, approved, rejected]
                        CreatedAt:
                          type: string
                          format: date
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '403':
          description: Forbidden access. Access token invalid or user don't have admin role.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: This user doesn't have admin role.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
            
# components:
#   securitySchemes:
#     access_token: # arbitrary name for the security scheme
#       type: http
#       scheme: bearer
#       bearerFormat: JWT
