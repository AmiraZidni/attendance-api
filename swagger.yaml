openapi: 3.0.0

info:
  title: Attendance System with Geo Location
  description: Glints Industry Project Exploration Group 1
  version: 1.0.0

servers:
  - url: https://glints-ipe1-attendance.herokuapp.com/v1/
    description: Backend main server

tags:
  - name: Account
    description: Operations related to user accounts
  - name: Attendance
    description: Operations related to attendance records
  - name: Admin
    description: Operation related to admin authority
paths:
  /accounts/register:
    post:
      tags:
        - Account
      summary: Register a new user to the server
      description: ''
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
                - first_name
                - last_name
                - email
                - password
      responses:
        '201':
          description: User registered to the application successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Account register success.
        '400':
          description: Bad Request. One of form data did NOT meet the requirements.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Request body did not pass the validation process.
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        value:
                          type: string
                        msg:
                          type: string
                        param:
                          type: string
                        location:
                          type: string
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /accounts/forget-password:
    post:
      tags:
        - Account
      summary: Request server to send link to reset password to user's email.
      description: ''
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        '200':
          description: Operation success. Email sent to the user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Operation success. Email sent to the user.
        '404':
          description: Email not found in the database.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email not found.
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /accounts/reset-password/{resetToken}:
      post:
        tags:
          - Account
        summary: Change user's password
        description: ''
        parameters:
          - in: path
            name: resetToken # Note the name is the same as in the path
            required: true
            schema:
              type: string
            description: request token from the email
        requestBody:
          required: true
          content:
            application/x-www-form-urlencoded:
              schema:
                type: object
                properties:
                  password:
                    type: string
                required:
                  - password
        responses:
          '200':
            description: Password changed successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Password updated successfully.
          '400':
            description: Password rejected. Must be at least 8 characters long.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Password must be more than 8 character length.
          '403':
            description: Reset token is incorrect
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Reset token is incorrect.
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string

  /accounts/auth:
    post:
      tags:
        - Account
      summary: Get user data and tokens by providing user's credentials in the request body.
      description: ''
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
                - email
                - password
      responses:
        '200':
          description: OK. User authentication success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      isAdmin:
                        type: boolean
                      office_location:
                          type: object
                          properties:
                            lat:
                              type: number
                            long:
                              type: number
                      access_token:
                        type: string
                      refresh_token:
                        type: string
        '400':
          description: Bad Request. Request body did not pass validation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        value:
                          type: string
                        msg:
                          type: string
                        param:
                          type: string
                        location:
                          type: string
        '401':
          description: Unauthorized. Email or password is incorrect.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '403':
          description: Forbidden. Account has not been approved by admin.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /attendances:
    get:
      tags:
        - Attendance
      summary: Get all attendances of all user in monthly period. ADMIN ONLY.
      description: ''
      security:
        - access_token: []
      parameters:
        - in: header
          name: refresh_token
          schema:
            type: string
        - in: query
          name: year
          schema:
            type: integer
          description: Year for filtering attendances. If omitted, system will use current year.
        - in: query
          name: month
          schema:
            type: integer
          description: Month for filtering attendances. Use number from 1 to 12. If omitted, system will use current month
      responses:
        '400':
          description: Bad Request. Request query parameters did not pass validation.
          headers:
            new_access_token:
              schema:
                type: string
              description: Only available after refreshing token. Use this token for next api calls.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        value:
                          type: string
                        msg:
                          type: string
                        param:
                          type: string
                        location:
                          type: string
        '403':
          description: Forbidden. Current user don't have admin privilege.
          headers:
            new_access_token:
              schema:
                type: string
              description: Only available after refreshing token. Use this token for next api calls.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '200':
          description: OK. Attendances of all users retrieved successfully.
          headers:
            new_access_token:
              schema:
                type: string
              description: Only available after refreshing token. Use this token for next api calls.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        first_name:
                          type: string
                        last_name:
                          type: string
                        email:
                          type: string
                        in_time:
                          type: string
                          format: date-time
                        in_location:
                          type: object
                          properties:
                            lat:
                              type: number
                            long:
                              type: number
                        out_time:
                          type: string
                          format: date-time
                        out_location:
                          type: object
                          properties:
                            lat:
                              type: number
                            long:
                              type: number
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /attendances/{userId}:
    get:
      tags:
        - Attendance
      summary: Get all attendances by user id in monthly period.
      description: ''
      security:
        - access_token: []
      parameters:
        - in: header
          name: refresh_token
          schema:
            type: string
        - in: path
          name: userId # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: user / account id
        - in: query
          name: year
          schema:
            type: integer
          description: Year for filtering attendances. If omitted, system will use current year.
        - in: query
          name: month
          schema:
            type: integer
          description: Month for filtering attendances. Use number from 1 to 12. If omitted, system will use current month
      responses:
        '200':
          description: OK. Attendance of requested user retrieved successfully.
          headers:
            new_access_token:
              schema:
                type: string
              description: Only available after refreshing token. Use this token for next api calls.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        in_time:
                          type: string
                          format: date-time
                        in_location:
                          type: object
                          properties:
                            lat:
                              type: number
                            long:
                              type: number
                        out_time:
                          type: string
                          format: date-time
                        out_location:
                          type: object
                          properties:
                            lat:
                              type: number
                            long:
                              type: number
        '400':
          description: Bad Request. Request query parameters did not pass the validation process.
          headers:
            new_access_token:
              schema:
                type: string
              description: Only available after refreshing token. Use this token for next api calls.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        value:
                          type: string
                        msg:
                          type: string
                        param:
                          type: string
                        location:
                          type: string
        '403':
          description: Forbidden. Current account does not have access to the requested user id.
          headers:
            new_access_token:
              schema:
                type: string
              description: Only available after refreshing token. Use this token for next api calls.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /attendances/{userId}/status:
    get:
      tags:
        - Attendance
      summary: Get user's availability to check in and check out. Also get last attendance record time and location.
      description: ''
      security:
        - access_token: []
      parameters:
        - in: header
          name: refresh_token
          schema:
            type: string
        - in: path
          name: userId # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: user / account id
      responses:
        '400':
          description: Bad Request. Request query parameters did not pass the validation process.
          headers:
            new_access_token:
              schema:
                type: string
              description: Only available after refreshing token. Use this token for next api calls.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        value:
                          type: string
                        msg:
                          type: string
                        param:
                          type: string
                        location:
                          type: string
        '403':
          description: Forbidden. Current account does not have access to the requested user id.
          headers:
            new_access_token:
              schema:
                type: string
              description: Only available after refreshing token. Use this token for next api calls.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '200':
          description: OK. User attendance status retrieved successfully.
          headers:
            new_access_token:
              schema:
                type: string
              description: Only available after refreshing token. Use this token for next api calls.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      canCheckIn:
                        type: boolean
                      canCheckOut:
                        type: boolean
                      last_record:
                        type: object
                        properties:
                          id:
                            type: string
                          in_time:
                            type: string
                            format: date-time
                          in_location:
                            type: object
                            properties:
                              lat:
                                type: number
                              long:
                                type: number
                          out_time:
                            type: string
                            format: date-time
                          out_location:
                            type: object
                            properties:
                              lat:
                                type: number
                              long:
                                type: number
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /attendances/{userId}/in:
    post:
      tags:
        - Attendance
      summary: Check in with current time and location
      description: ''
      security:
        - access_token: []
      parameters:
        - in: header
          name: refresh_token
          schema:
            type: string
        - in: path
          name: userId # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: user / account id
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                lat:
                  type: number
                long:
                  type: number
              required:
                - lat
                - long
      responses:
        '400':
          description: Bad Request. Request body fields did not pass the validation process.
          headers:
            new_access_token:
              schema:
                type: string
              description: Only available after refreshing token. Use this token for next api calls.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        value:
                          type: string
                        msg:
                          type: string
                        param:
                          type: string
                        location:
                          type: string
        '403':
          description: Forbidden. Cannot check in with this user
          headers:
            new_access_token:
              schema:
                type: string
              description: Only available after refreshing token. Use this token for next api calls.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '201':
          description: OK. Check in success. Time and location saved in the database.
          headers:
            new_access_token:
              schema:
                type: string
              description: Only available after refreshing token. Use this token for next api calls.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /attendances/{userId}/out:
    post:
      tags:
        - Attendance
      summary: Check out with current time and location
      description: ''
      security:
        - access_token: []
      parameters:
        - in: header
          name: refresh_token
          schema:
            type: string
        - in: path
          name: userId # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: user / account id
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                lat:
                  type: number
                long:
                  type: number
              required:
                - lat
                - long
      responses:
        '400':
          description: Bad Request. Request body fields did not pass the validation process.
          headers:
            new_access_token:
              schema:
                type: string
              description: Only available after refreshing token. Use this token for next api calls.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        value:
                          type: string
                        msg:
                          type: string
                        param:
                          type: string
                        location:
                          type: string
        '403':
          description: Forbidden. Cannot check out with this user
          headers:
            new_access_token:
              schema:
                type: string
              description: Only available after refreshing token. Use this token for next api calls.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '201':
          description: OK. Check in success. Time and location saved in the database.
          headers:
            new_access_token:
              schema:
                type: string
              description: Only available after refreshing token. Use this token for next api calls.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /admin:
    get:
      tags:
      - Admin
      summary: Retrieve all registered account
      description: ''
      security:
        - access_token: []
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
      responses:
        '200':
          description: Success retrieve account list.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                      type: string
                      example: Account list retrieved successfully.
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        first_name:
                          type: string
                        last_name:
                          type: string
                        email:
                          type: string
                          format: email
                        status:
                          type: string
                          enum: [pending, approved, rejected]
                        CreatedAt:
                          type: string
                          format: date
        '401':
          description: Authentication error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid access token.
        '403':
          description: Forbidden access. Access token invalid or user don't have admin role.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: This user doesn't have admin role.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /admin/{id}:
    put:
      tags:
      - Admin
      summary: Update account approval
      description: Update only to [pending, approved, rejected]
      security:
        - access_token: []
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: account's id
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [pending, approved, rejected]
              required:
                - status
      responses:
        '200':
          description: Account approval updated successfully.
          content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: Account approval updated successfully.
                status:
                  type: string
                  enum: [pending, approved, rejected]
        '400':
          description: Bad Request Body. Invalid approval status.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: array
                    items:
                      type: string
                      example: Invalid approval status.
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '403':
          description: Forbidden access.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: This user doesn't have admin role.
        '404':
          description: Cannot find account.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Account not found.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /admin/last-attendances:
    get:
      tags:
      - Admin
      summary: Retrieve all account last attendances.
      description: ''
      security:
        - access_token: []
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
      responses:
        '200':
          description: Success retrieve all user last attendances.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                      type: string
                      example: All account last attendances retrieved successfully.
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        first_name:
                          type: string
                        last_name:
                          type: string
                        last_check_in:
                          type: string
                          format: date-time
                        last_check_out:
                          type: string
                          format: date-time
        '401':
          description: Authentication error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid access token.
        '403':
          description: Forbidden access. Access token invalid or user don't have admin role.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: This user doesn't have admin role.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
components:
  securitySchemes:
    access_token: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
